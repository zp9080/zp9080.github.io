<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>堆攻击旧版 on f1ow-blog</title><link>https://zp9080.github.io/categories/%E5%A0%86%E6%94%BB%E5%87%BB%E6%97%A7%E7%89%88/</link><description>Recent content in 堆攻击旧版 on f1ow-blog</description><generator>Hugo</generator><language>zh-CN</language><lastBuildDate>Sun, 28 Jul 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://zp9080.github.io/categories/%E5%A0%86%E6%94%BB%E5%87%BB%E6%97%A7%E7%89%88/rss.xml" rel="self" type="application/rss+xml"/><item><title>fastbin attack</title><link>https://zp9080.github.io/post/%E5%A0%86%E6%94%BB%E5%87%BB%E6%97%A7%E7%89%88/fastbin-attack/</link><pubDate>Sun, 28 Jul 2024 00:00:00 +0000</pubDate><guid>https://zp9080.github.io/post/%E5%A0%86%E6%94%BB%E5%87%BB%E6%97%A7%E7%89%88/fastbin-attack/</guid><description>[TOC] 核心： 1.存在堆溢出、use-after-free 等能控制 chunk 内容的漏洞 2.漏洞发生于 fastbin 类型的 chunk 中 3.fastbin的单项链表结构,fd指针</description></item><item><title>fastbin错位构造</title><link>https://zp9080.github.io/post/%E5%A0%86%E6%94%BB%E5%87%BB%E6%97%A7%E7%89%88/fastbin%E9%94%99%E4%BD%8D%E6%9E%84%E9%80%A0/</link><pubDate>Sun, 28 Jul 2024 00:00:00 +0000</pubDate><guid>https://zp9080.github.io/post/%E5%A0%86%E6%94%BB%E5%87%BB%E6%97%A7%E7%89%88/fastbin%E9%94%99%E4%BD%8D%E6%9E%84%E9%80%A0/</guid><description>通过错位构造\x7f可以得到malloc_hook edit(0x10,p64(libc.sym[&amp;#39;__malloc_hook&amp;#39;]-0x23)) add(0x68,b&amp;#34;A&amp;#34;*8) add(0x68,b&amp;#34;\x00&amp;#34;*0x13 + p64(one_gadget))</description></item><item><title>house of orange新理解</title><link>https://zp9080.github.io/post/%E5%A0%86%E6%94%BB%E5%87%BB%E6%97%A7%E7%89%88/house-of-orange%E6%96%B0%E7%90%86%E8%A7%A3/</link><pubDate>Sun, 28 Jul 2024 00:00:00 +0000</pubDate><guid>https://zp9080.github.io/post/%E5%A0%86%E6%94%BB%E5%87%BB%E6%97%A7%E7%89%88/house-of-orange%E6%96%B0%E7%90%86%E8%A7%A3/</guid><description>house of orange攻击流程没什么好说的，但笔者之前一直认为就只是把top chunk放入unsorted bin，然后修改unsorted bin的</description></item><item><title>realloc调整堆栈</title><link>https://zp9080.github.io/post/%E5%A0%86%E6%94%BB%E5%87%BB%E6%97%A7%E7%89%88/realloc%E8%B0%83%E6%95%B4%E5%A0%86%E6%A0%88/</link><pubDate>Sun, 28 Jul 2024 00:00:00 +0000</pubDate><guid>https://zp9080.github.io/post/%E5%A0%86%E6%94%BB%E5%87%BB%E6%97%A7%E7%89%88/realloc%E8%B0%83%E6%95%B4%E5%A0%86%E6%A0%88/</guid><description>注意realloc_hook就在malloc_hook-8的位置 # __malloc_hook -&amp;gt; realloc+8 # __realloc_hook -&amp;gt; one_gadget realloc = libc_base + libc.sym[&amp;#39;realloc&amp;#39;] one_gadget = [0x4527a, 0xf03a4, 0xf1247] add(4, 0x68, b&amp;#39;p&amp;#39; * 11 + p64(libc_base + one_gadget[0]) + p64(realloc + 8))</description></item><item><title>unsorted bin attack</title><link>https://zp9080.github.io/post/%E5%A0%86%E6%94%BB%E5%87%BB%E6%97%A7%E7%89%88/unsorted-bin-attack/</link><pubDate>Sun, 28 Jul 2024 00:00:00 +0000</pubDate><guid>https://zp9080.github.io/post/%E5%A0%86%E6%94%BB%E5%87%BB%E6%97%A7%E7%89%88/unsorted-bin-attack/</guid><description>[TOC] 1.unsorted bin attack 被利用的前提是控制 unsorted bin chunk 的 bk 指针或者有show函数。 2.unsorted bin attack的目的一般是为别的attack做准备，比如可以通过main_ar</description></item></channel></rss>