<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Win Pwn on f1ow-blog</title><link>https://zp9080.github.io/categories/win-pwn/</link><description>Recent content in Win Pwn on f1ow-blog</description><generator>Hugo</generator><language>zh-CN</language><lastBuildDate>Sun, 28 Jul 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://zp9080.github.io/categories/win-pwn/rss.xml" rel="self" type="application/rss+xml"/><item><title>win pwn调试相关</title><link>https://zp9080.github.io/post/win-pwn/win-pwn%E8%B0%83%E8%AF%95%E7%9B%B8%E5%85%B3/</link><pubDate>Sun, 28 Jul 2024 00:00:00 +0000</pubDate><guid>https://zp9080.github.io/post/win-pwn/win-pwn%E8%B0%83%E8%AF%95%E7%9B%B8%E5%85%B3/</guid><description>在Windbg中，要查看当前指令所在的函数，您可以使用 ln（List Nearest Symbols）命令。该命令将告诉您当前执行指令所在的函数，以及在该函</description></item><item><title>win pwn例题</title><link>https://zp9080.github.io/post/win-pwn/win-pwn%E4%BE%8B%E9%A2%98/</link><pubDate>Sun, 28 Jul 2024 00:00:00 +0000</pubDate><guid>https://zp9080.github.io/post/win-pwn/win-pwn%E4%BE%8B%E9%A2%98/</guid><description>最近打NKCTF遇到了一个winpwn，在此也是借着这个机会学习了一下 漏洞也很明显，如果是linux直接ret2libc很快就打完了，这里引</description></item></channel></rss>